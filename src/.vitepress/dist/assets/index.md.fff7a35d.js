import{o as n,c as s,a}from"./app.33142d62.js";const t='{"title":"Emotion","description":"","frontmatter":{},"headers":[{"level":2,"title":"Emotionの導入","slug":"emotionの導入"},{"level":3,"title":"ライブラリ説明","slug":"ライブラリ説明"},{"level":3,"title":"設定","slug":"設定"},{"level":2,"title":"Theme","slug":"theme"},{"level":3,"title":"Themeの型付け","slug":"themeの型付け"},{"level":2,"title":"CSS Props","slug":"css-props"},{"level":3,"title":"style内で状態を切り替える","slug":"style内で状態を切り替える"}],"relativePath":"index.md","lastUpdated":1617339356855}',p={},o=a('<h1 id="emotion"><a class="header-anchor" href="#emotion" aria-hidden="true">#</a> Emotion</h1><h2 id="emotionの導入"><a class="header-anchor" href="#emotionの導入" aria-hidden="true">#</a> Emotionの導入</h2><div class="language-shell"><pre><code><span class="token function">yarn</span> <span class="token function">add</span> @emotion/react\n<span class="token function">yarn</span> <span class="token function">add</span> -D @emotion/babel-preset-css-prop\n</code></pre></div><h3 id="ライブラリ説明"><a class="header-anchor" href="#ライブラリ説明" aria-hidden="true">#</a> ライブラリ説明</h3><ul><li>@emotion/react <ul><li>Reactで使用するemotionライブラリ</li><li>React, Vue, Angularなどライブラリに依存させない場合は、@emotion/cssを使用する</li></ul></li><li>@emotion/babel-preset-css-prop <ul><li>React 17で登場した<a href="https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html" target="_blank" rel="noopener noreferrer">JSXトランスフォーム</a>を使用する際に、EmotionのCSS Propを有効にするためのBabel</li></ul></li></ul><h3 id="設定"><a class="header-anchor" href="#設定" aria-hidden="true">#</a> 設定</h3><ul><li>.babelrcの設定</li></ul><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;next/babel&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;@emotion/babel-preset-css-prop&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>@emotion/babel-preset-css-propではなく、下記のライブラリを使用してもstyleが反映されるのを確認</li><li>babelの設定をしていない場合は、styleが反映されない</li></ul><div class="language-shell"><pre><code><span class="token function">yarn</span> <span class="token function">add</span> -D @babel/preset-react\n</code></pre></div><ul><li>babelrcの設定</li></ul><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;presets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">&quot;next/babel&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token property">&quot;preset-react&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token property">&quot;runtime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;automatic&quot;</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;importSource&quot;</span><span class="token operator">:</span> <span class="token string">&quot;@emotion/react&quot;</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div></div><h2 id="theme"><a class="header-anchor" href="#theme" aria-hidden="true">#</a> Theme</h2><p>Styled Component同様に<code>ThemeProvider</code>が使えるため、ThemeProviderを使用して<code>Theme</code>を流す</p><div class="language-tsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> AppProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next/app&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> theme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./theme&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>Component<span class="token punctuation">,</span> pageProps<span class="token punctuation">}</span><span class="token operator">:</span> AppProps</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> themeを流す <span class="token operator">--</span><span class="token operator">&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>theme<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">\n      </span><span class="token punctuation">{</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="themeの型付け"><a class="header-anchor" href="#themeの型付け" aria-hidden="true">#</a> Themeの型付け</h3><p>themeの型が効くようにします</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token string">&#39;@emotion/react&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> theme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/styles/designToken/theme&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> <span class="token class-name">CustomTheme</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> theme<span class="token punctuation">;</span>\n<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">&#39;@emotion/react&#39;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// eslint-disable-next-line</span>\n  <span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Theme</span> <span class="token keyword">extends</span> <span class="token class-name">CustomTheme</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="css-props"><a class="header-anchor" href="#css-props" aria-hidden="true">#</a> CSS Props</h2><p>オブジェクト形式でスタイルを書くことができます</p><div class="language-tsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>css<span class="token punctuation">,</span> Theme<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@emotion/react&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">style</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">theme<span class="token operator">:</span> Theme</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> css<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>red<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Text<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>children<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n  <span class="token comment">/* themeが流れてくる */</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="style内で状態を切り替える"><a class="header-anchor" href="#style内で状態を切り替える" aria-hidden="true">#</a> style内で状態を切り替える</h3><div class="language-tsx"><pre><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>css<span class="token punctuation">,</span> Theme<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@emotion/react&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> <span class="token class-name">Size</span> <span class="token operator">=</span> <span class="token string">&#39;sm&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;md&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;lg&#39;</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ベースのスタイル</span>\n<span class="token keyword">const</span> <span class="token function-variable function">baseStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">theme<span class="token operator">:</span> Theme</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> css<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  display: inline-block;\n  cursor: pointer;\n  padding: 0.75rem 1.15rem;\n  font-size: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>fontSizes<span class="token punctuation">.</span>md<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n  margin: 0.15rem;\n  background-color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>white<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n  border-radius: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>borderRadius<span class="token punctuation">.</span>sm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n  border: 1px solid </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>lightGray<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n  outline: none;\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  theme<span class="token punctuation">,</span>\n  size <span class="token operator">=</span> <span class="token string">&#39;md&#39;</span>\n<span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  theme<span class="token operator">:</span> Theme<span class="token punctuation">,</span>\n  size<span class="token operator">:</span> Size\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> base <span class="token operator">=</span> <span class="token function">baseStyle</span><span class="token punctuation">(</span>theme<span class="token punctuation">)</span>\n  <span class="token comment">// small sizeのスタイル</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>size<span class="token punctuation">.</span>sm<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> css<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n      font-size: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>fontSizes<span class="token punctuation">.</span>sm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>base<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n    </span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// large sizeのスタイル</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>size<span class="token punctuation">.</span>lg<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> css<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n      font-size: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>fontSizes<span class="token punctuation">.</span>lg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n      </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>base<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n    </span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// 標準(medium size)のスタイル</span>\n  <span class="token keyword">return</span> css<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>base<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n  </span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>\n  size<span class="token operator">:</span> Size<span class="token punctuation">,</span>\n  isDisabled<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  isLoading<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> Button<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>children<span class="token punctuation">,</span> size<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> \n    <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>isDisabled <span class="token operator">||</span> isLoading<span class="token punctuation">}</span></span>\n    <span class="token attr-name">css</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">theme</span> <span class="token operator">=&gt;</span> <span class="token function">style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>theme<span class="token punctuation">,</span> size<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n  <span class="token punctuation">&gt;</span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token punctuation">)</span>\n</code></pre></div>',20);p.render=function(a,t,p,e,c,l){return n(),s("div",null,[o])};export default p;export{t as __pageData};
